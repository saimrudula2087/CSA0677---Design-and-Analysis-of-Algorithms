#include <stdio.h>
void setZeroes(int** matrix, int matrixSize, int* matrixColSize) {
    int m = matrixSize;
    int n = *matrixColSize;
    int rowZero = 0, colZero = 0;
    for (int i = 0; i < m; i++) {
        if (matrix[i][0] == 0) {
            colZero = 1;
            break;
        }
    }

    for (int j = 0; j < n; j++) {
        if (matrix[0][j] == 0) {
            rowZero = 1;
            break;
        }
    }
    for (int i = 1; i < m; i++) {
        for (int j = 1; j < n; j++) {
            if (matrix[i][j] == 0) {
                matrix[i][0] = 0;
                matrix[0][j] = 0;
            }
        }
    }
    for (int i = 1; i < m; i++) {
        for (int j = 1; j < n; j++) {
            if (matrix[i][0] == 0 || matrix[0][j] == 0) {
                matrix[i][j] = 0;
            }
        }
    }
    if (rowZero) {
        for (int j = 0; j < n; j++) {
            matrix[0][j] = 0;
        }
    }

    if (colZero) {
        for (int i = 0; i < m; i++) {
            matrix[i][0] = 0;
        }
    }
}

int main() {
    int matrix[][3] = {{1, 1, 1}, {1, 0, 1}, {1, 1, 1}};
    int matrixSize = sizeof(matrix) / sizeof(matrix[0]);
    int matrixColSize = sizeof(matrix[0]) / sizeof(matrix[0][0]);

    setZeroes((int**)matrix, matrixSize, &matrixColSize);

    printf("Output:\n");
    for (int i = 0; i < matrixSize; i++) {
        for (int j = 0; j < matrixColSize; j++) {
            printf("%d ", matrix[i][j]);
        }
        printf("\n");
    }

    return 0;
}
