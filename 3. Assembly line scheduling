#include <stdio.h>
#include <limits.h>
int carAssembly(int a[][4], int t[][3], int *e, int *x, int n) {
    int T1[n], T2[n];
    T1[0] = e[0] + a[0][0];
    T2[0] = e[1] + a[1][0];

    for (int i = 1; i < n; i++) {
        T1[i] = (T1[i-1] + a[0][i] < T2[i-1] + t[1][i-1] + a[0][i]) ? T1[i-1] + a[0][i] : T2[i-1] + t[1][i-1] + a[0][i];
        T2[i] = (T2[i-1] + a[1][i] < T1[i-1] + t[0][i-1] + a[1][i]) ? T2[i-1] + a[1][i] : T1[i-1] + t[0][i-1] + a[1][i];
    }

    return (T1[n-1] + x[0] < T2[n-1] + x[1]) ? T1[n-1] + x[0] : T2[n-1] + x[1];
}

int main() {
    int a[][4] = {{4, 5, 3, 2},
                  {2, 10, 1, 4}};
    int t[][3] = {{0, 7, 4},
                  {0, 9, 2}};
    int e[] = {10, 12};
    int x[] = {18, 7};
    int n = sizeof(a[0])/sizeof(a[0][0]);
    printf("Minimum time to traverse the assembly line: %d\n", carAssembly(a, t, e, x, n));
    return 0;
}
