#include <stdio.h>
#include <math.h>

int powSet(int arr[], int n, int sum) {
    int pow_size = pow(2, n);
    int counter, j;
    int maxSum = 0;

    for (counter = 0; counter < pow_size; counter++) {
        int curr_sum = 0;
        for (j = 0; j < n; j++) {
            if (counter & (1 << j))
                curr_sum += arr[j];
        }
        if (curr_sum <= sum && curr_sum > maxSum)
            maxSum = curr_sum;
    }
    return maxSum;
}

int main() {
    int arr[] = {3, 34, 4, 12, 5, 2};
    int n = sizeof(arr) / sizeof(arr[0]);
    int S = 10;
    printf("Largest subset sum <= %d is %d\n", S, powSet(arr, n, S));
    return 0;
}
