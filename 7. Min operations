#include <stdio.h>
int minOperations(int* arr1, int arr1Size, int* arr2, int arr2Size) {
    int dp[arr1Size];
    dp[0] = 1;

    for (int i = 1; i < arr1Size; i++) {
        dp[i] = 1;
        for (int j = 0; j < arr2Size; j++) {
            if (arr1[i] > arr1[i - 1] && arr1[i] > arr2[j]) {
                dp[i] = dp[i - 1] + 1;
            }
        }
    }

    int operations = 0;
    for (int i = 0; i < arr1Size; i++) {
        if (dp[i] == 0) {
            operations++;
        }
    }

    return operations == 0 ? 0 : operations - 1;
}

int main() {
    int arr1[] = {1, 5, 3, 6, 7};
    int arr2[] = {1, 3, 2, 4};
    int arr1Size = sizeof(arr1) / sizeof(arr1[0]);
    int arr2Size = sizeof(arr2) / sizeof(arr2[0]);

    int result = minOperations(arr1, arr1Size, arr2, arr2Size);
    printf("Minimum operations needed: %d\n", result);

    return 0;
}
