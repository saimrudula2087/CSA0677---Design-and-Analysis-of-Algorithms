
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define MOD 1000000007
long long maxNonAdjacentSum(int *nums, int n) {
    if (n == 0) return 0;
    if (n == 1) return nums[0];
    long long prev1 = 0, prev2 = 0, current;
    for (int i = 0; i < n; ++i) {
        current = (nums[i] + prev2 > prev1) ? nums[i] + prev2 : prev1;
        prev2 = prev1;
        prev1 = current;
    }
    return current;
}
int main() {
    int nums[] = {1, 2, 3, 4};
    int queries[][2] = {{1, 2}, {3, 1}, {0, 3}};
    int numsSize = sizeof(nums) / sizeof(nums[0]);
    int queriesSize = sizeof(queries) / sizeof(queries[0]);

    long long result = 0;
    for (int i = 0; i < queriesSize; ++i) {
        int pos = queries[i][0];
        int xi = queries[i][1];
        nums[pos] = xi;
        long long currentMaxSum = maxNonAdjacentSum(nums, numsSize);
        result = (result + currentMaxSum) % MOD;
    }
    printf("The sum of the answers to all queries is: %lld\n", result);
    return 0;
}
