#include <stdio.h>
#include <string.h>
#define MOD 1000000007
int countPalindromicSubsequences(char *s) {
    int n = strlen(s);
    long long dp[1005][1005];
    memset(dp, 0, sizeof(dp));

    for (int len = 1; len <= 5; len++) {
        for (int i = 0; i < n; i++) {
            int j = i + len - 1;
            if (j >= n) break;

            if (len == 1) {
                dp[i][j] = 1;
            } else {
                dp[i][j] = dp[i + 1][j] + dp[i][j - 1] + 1;
                if (s[i] == s[j]) {
                    dp[i][j] += 1;
                }
                int k = i + 1;
                while (k <= j && s[i] != s[k]) {
                    k++;
                }
                if (k <= j) {
                    dp[i][j] -= dp[k + 1][j - 1];
                }
            }
            dp[i][j] = (dp[i][j] + MOD) % MOD;
        }
    }

    return (int)dp[0][n - 1];
}

int main() {
    char s[] = "12321";
    int result = countPalindromicSubsequences(s);
    printf("Number of palindromic subsequences: %d\n", result);
    return 0;
}
