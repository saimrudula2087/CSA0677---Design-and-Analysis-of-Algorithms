#include <stdio.h>
#include <stdlib.h>
int compare(const void* a, const void* b) {
    return ((int)a - (int)b);
}
int countLessEqual(int* arr, int size, int value) {
    int low = 0, high = size - 1;
    while (low <= high) {
        int mid = (low + high) / 2;
        if (arr[mid] <= value) {
            low = mid + 1;
        } else {
            high = mid - 1;
        }
    }
    return low;
}
int countValidPairs(int* nums1, int* nums2, int n, int diff) {
    int* sortedDifferences = (int*)malloc(n * sizeof(int));
    int count = 0;
    int size = 0;

    for (int i = 0; i < n; i++) {
        int currentDiff = nums1[i] - nums2[i];
        count += countLessEqual(sortedDifferences, size, currentDiff + diff);
        int j = size - 1;
        while (j >= 0 && sortedDifferences[j] > currentDiff) {
            sortedDifferences[j + 1] = sortedDifferences[j];
            j--;
        }
        sortedDifferences[j + 1] = currentDiff;
        size++;
    }

    free(sortedDifferences);
    return count;
}

int main() {
    int nums1[] = {3, 2, 5};
    int nums2[] = {2, 2, 1};
    int diff = 1;
    int n = sizeof(nums1) / sizeof(nums1[0]);

    int result = countValidPairs(nums1, nums2, n, diff);
    printf("Number of valid pairs: %d\n", result);

    return 0;
}
