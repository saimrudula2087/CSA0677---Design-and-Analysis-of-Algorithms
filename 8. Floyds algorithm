#include <stdio.h>
#include <limits.h>
#define INF INT_MAX
#define N 4
void floydsAlgorithm(int graph[N][N]) {
    int dist[N][N];

    for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
            dist[i][j] = graph[i][j];
        }
    }

    for (int k = 0; k < N; k++) {
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                if (dist[i][k] != INF && dist[k][j] != INF && dist[i][k] + dist[k][j] < dist[i][j]) {
                    dist[i][j] = dist[i][k] + dist[k][j];
                }
            }
        }
    }

    printf("Distance Matrix after applying Floyd's Algorithm:\n");
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
            if (dist[i][j] == INF) {
                printf("INF\t");
            } else {
                printf("%d\t", dist[i][j]);
            }
        }
        printf("\n");
    }

    printf("Shortest path from City 1 to City 3: %d\n", dist[0][2]);
}

int main() {
    int graph[N][N] = {
        {0, 3, 8, -4},
        {INF, 0, 4, 1},
        {2, INF, 0, -5},
        {INF, 6, INF, 0}
    };

    floydsAlgorithm(graph);

    return 0;
}
