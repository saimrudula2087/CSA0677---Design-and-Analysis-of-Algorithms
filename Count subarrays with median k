#include <stdio.h>
#include <stdlib.h>
int countSubarraysWithMedianK(int* nums, int n, int k) {
    int kIndex = -1;
    for (int i = 0; i < n; i++) {
        if (nums[i] == k) {
            kIndex = i;
            break;
        }
    }

    int left = 0, right = 0, count = 0;
    int* balance = (int*)calloc(2 * n + 1, sizeof(int));
    balance[n] = 1;

    for (int i = kIndex - 1; i >= 0; i--) {
        left += (nums[i] < k) ? -1 : 1;
        balance[left + n]++;
    }

    for (int i = kIndex; i < n; i++) {
        right += (nums[i] < k) ? -1 : 1;
        count += balance[right + n];
    }

    free(balance);
    return count;
}

int main() {
    int nums1[] = {3, 2, 1, 4, 5};
    int k1 = 4;
    int n1 = sizeof(nums1) / sizeof(nums1[0]);
    printf("Number of subarrays with median %d: %d\n", k1, countSubarraysWithMedianK(nums1, n1, k1));

    int nums2[] = {2, 3, 1};
    int k2 = 3;
    int n2 = sizeof(nums2) / sizeof(nums2[0]);
    printf("Number of subarrays with median %d: %d\n", k2, countSubarraysWithMedianK(nums2, n2, k2));

    return 0;
}
